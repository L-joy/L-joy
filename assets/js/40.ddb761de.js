(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{242:function(e,a,s){"use strict";s.r(a);var t=s(0),v=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"vue-js-day5-webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-day5-webpack"}},[e._v("#")]),e._v(" Vue.js - Day5 - Webpack")]),e._v(" "),s("h2",{attrs:{id:"在网页中会引用哪些常见的静态资源？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在网页中会引用哪些常见的静态资源？"}},[e._v("#")]),e._v(" 在网页中会引用哪些常见的静态资源？")]),e._v(" "),s("ul",[s("li",[e._v("JS")])]),e._v(" "),s("ul",[s("li",[e._v(".js  .jsx  .coffee  .ts（TypeScript  类 C# 语言）")])]),e._v(" "),s("ul",[s("li",[e._v("CSS")])]),e._v(" "),s("ul",[s("li",[e._v(".css  .less   .sass  .scss")])]),e._v(" "),s("ul",[s("li",[e._v("Images")])]),e._v(" "),s("ul",[s("li",[e._v(".jpg   .png   .gif   .bmp   .svg")])]),e._v(" "),s("ul",[s("li",[e._v("字体文件（Fonts）")])]),e._v(" "),s("ul",[s("li",[e._v(".svg   .ttf   .eot   .woff   .woff2")])]),e._v(" "),s("ul",[s("li",[e._v("模板文件")])]),e._v(" "),s("ul",[s("li",[e._v(".ejs   .jade  .vue【这是在webpack中定义组件的方式，推荐这么用】")])]),e._v(" "),s("h2",{attrs:{id:"网页中引入的静态资源多了以后有什么问题？？？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#网页中引入的静态资源多了以后有什么问题？？？"}},[e._v("#")]),e._v(" 网页中引入的静态资源多了以后有什么问题？？？")]),e._v(" "),s("ol",[s("li",[e._v("网页加载速度慢， 因为 我们要发起很多的二次请求；")]),e._v(" "),s("li",[e._v("要处理错综复杂的依赖关系")])]),e._v(" "),s("h2",{attrs:{id:"如何解决上述两个问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何解决上述两个问题"}},[e._v("#")]),e._v(" 如何解决上述两个问题")]),e._v(" "),s("ol",[s("li",[e._v("合并、压缩、精灵图、图片的Base64编码")]),e._v(" "),s("li",[e._v("可以使用之前学过的requireJS、也可以使用webpack可以解决各个包之间的复杂依赖关系；")])]),e._v(" "),s("h2",{attrs:{id:"什么是webpack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是webpack"}},[e._v("#")]),e._v(" 什么是webpack?")]),e._v(" "),s("p",[e._v("webpack 是前端的一个项目构建工具，它是基于 Node.js 开发出来的一个前端工具；")]),e._v(" "),s("h2",{attrs:{id:"如何完美实现上述的2种解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何完美实现上述的2种解决方案"}},[e._v("#")]),e._v(" 如何完美实现上述的2种解决方案")]),e._v(" "),s("ol",[s("li",[e._v("使用Gulp， 是基于 task 任务的；")]),e._v(" "),s("li",[e._v("使用Webpack， 是基于整个项目进行构建的；")])]),e._v(" "),s("ul",[s("li",[e._v("借助于webpack这个前端自动化构建工具，可以完美实现资源的合并、打包、压缩、混淆等诸多功能。")]),e._v(" "),s("li",[e._v("根据官网的图片介绍webpack打包的过程")]),e._v(" "),s("li",[s("a",{attrs:{href:"http://webpack.github.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack官网"),s("OutboundLink")],1)])]),e._v(" "),s("h2",{attrs:{id:"webpack安装的两种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#webpack安装的两种方式"}},[e._v("#")]),e._v(" webpack安装的两种方式")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("npm i webpack -g")]),e._v("全局安装webpack，这样就能在全局使用webpack的命令")]),e._v(" "),s("li",[e._v("在项目根目录中运行"),s("code",[e._v("npm i webpack --save-dev")]),e._v("安装到项目依赖中")])]),e._v(" "),s("h2",{attrs:{id:"初步使用webpack打包构建列表隔行变色案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初步使用webpack打包构建列表隔行变色案例"}},[e._v("#")]),e._v(" 初步使用webpack打包构建列表隔行变色案例")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("npm init")]),e._v("初始化项目，使用npm管理项目中的依赖包")]),e._v(" "),s("li",[e._v("创建项目基本的目录结构")]),e._v(" "),s("li",[e._v("使用"),s("code",[e._v("cnpm i jquery --save")]),e._v("安装jquery类库")]),e._v(" "),s("li",[e._v("创建"),s("code",[e._v("main.js")]),e._v("并书写各行变色的代码逻辑：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\t// 导入jquery类库\n    import $ from 'jquery'\n\n    // 设置偶数行背景色，索引从0开始，0是偶数\n    $('#list li:even').css('backgroundColor','lightblue');\n    // 设置奇数行背景色\n    $('#list li:odd').css('backgroundColor','pink');\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[e._v("直接在页面上引用"),s("code",[e._v("main.js")]),e._v("会报错，因为浏览器不认识"),s("code",[e._v("import")]),e._v("这种高级的JS语法，需要使用webpack进行处理，webpack默认会把这种高级的语法转换为低级的浏览器能识别的语法；")]),e._v(" "),s("li",[e._v("运行"),s("code",[e._v("webpack 入口文件路径 输出文件路径")]),e._v("对"),s("code",[e._v("main.js")]),e._v("进行处理：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("webpack src/js/main.js dist/bundle.js\n")])])]),s("h2",{attrs:{id:"使用webpack的配置文件简化打包时候的命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack的配置文件简化打包时候的命令"}},[e._v("#")]),e._v(" 使用webpack的配置文件简化打包时候的命令")]),e._v(" "),s("ol",[s("li",[e._v("在项目根目录中创建"),s("code",[e._v("webpack.config.js")])]),e._v(" "),s("li",[e._v("由于运行webpack命令的时候，webpack需要指定入口文件和输出文件的路径，所以，我们需要在"),s("code",[e._v("webpack.config.js")]),e._v("中配置这两个路径：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // 导入处理路径的模块\n    var path = require('path');\n\n    // 导出一个配置对象，将来webpack在启动的时候，会默认来查找webpack.config.js，并读取这个文件中导出的配置对象，来进行打包处理\n    module.exports = {\n        entry: path.resolve(__dirname, 'src/js/main.js'), // 项目入口文件\n        output: { // 配置输出选项\n            path: path.resolve(__dirname, 'dist'), // 配置输出的路径\n            filename: 'bundle.js' // 配置输出的文件名\n        }\n    }\n")])])]),s("h2",{attrs:{id:"实现webpack的实时打包构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现webpack的实时打包构建"}},[e._v("#")]),e._v(" 实现webpack的实时打包构建")]),e._v(" "),s("ol",[s("li",[e._v("由于每次重新修改代码之后，都需要手动运行webpack打包的命令，比较麻烦，所以使用"),s("code",[e._v("webpack-dev-server")]),e._v("来实现代码实时打包编译，当修改代码之后，会自动进行打包构建。")]),e._v(" "),s("li",[e._v("运行"),s("code",[e._v("cnpm i webpack-dev-server --save-dev")]),e._v("安装到开发依赖")]),e._v(" "),s("li",[e._v("安装完成之后，在命令行直接运行"),s("code",[e._v("webpack-dev-server")]),e._v("来进行打包，发现报错，此时需要借助于"),s("code",[e._v("package.json")]),e._v("文件中的指令，来进行运行"),s("code",[e._v("webpack-dev-server")]),e._v("命令，在"),s("code",[e._v("scripts")]),e._v("节点下新增"),s("code",[e._v('"dev": "webpack-dev-server"')]),e._v("指令，发现可以进行实时打包，但是dist目录下并没有生成"),s("code",[e._v("bundle.js")]),e._v("文件，这是因为"),s("code",[e._v("webpack-dev-server")]),e._v("将打包好的文件放在了内存中")])]),e._v(" "),s("ul",[s("li",[e._v("把"),s("code",[e._v("bundle.js")]),e._v("放在内存中的好处是：由于需要实时打包编译，所以放在内存中速度会非常快")]),e._v(" "),s("li",[e._v("这个时候访问webpack-dev-server启动的"),s("code",[e._v("http://localhost:8080/")]),e._v("网站，发现是一个文件夹的面板，需要点击到src目录下，才能打开我们的index首页，此时引用不到bundle.js文件，需要修改index.html中script的src属性为:"),s("code",[e._v('<script src="../bundle.js"><\/script>')])]),e._v(" "),s("li",[e._v("为了能在访问"),s("code",[e._v("http://localhost:8080/")]),e._v("的时候直接访问到index首页，可以使用"),s("code",[e._v("--contentBase src")]),e._v("指令来修改dev指令，指定启动的根目录：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"dev": "webpack-dev-server --contentBase src"\n')])])]),s("p",[e._v("同时修改index页面中script的src属性为"),s("code",[e._v('<script src="bundle.js"><\/script>')])]),e._v(" "),s("h2",{attrs:{id:"使用html-webpack-plugin插件配置启动页面"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用html-webpack-plugin插件配置启动页面"}},[e._v("#")]),e._v(" 使用"),s("code",[e._v("html-webpack-plugin")]),e._v("插件配置启动页面")]),e._v(" "),s("p",[e._v("由于使用"),s("code",[e._v("--contentBase")]),e._v("指令的过程比较繁琐，需要指定启动的目录，同时还需要修改index.html中script标签的src属性，所以推荐大家使用"),s("code",[e._v("html-webpack-plugin")]),e._v("插件配置启动页面.")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i html-webpack-plugin --save-dev")]),e._v("安装到开发依赖")]),e._v(" "),s("li",[e._v("修改"),s("code",[e._v("webpack.config.js")]),e._v("配置文件如下：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    // 导入处理路径的模块\n    var path = require('path');\n    // 导入自动生成HTMl文件的插件\n    var htmlWebpackPlugin = require('html-webpack-plugin');\n\n    module.exports = {\n        entry: path.resolve(__dirname, 'src/js/main.js'), // 项目入口文件\n        output: { // 配置输出选项\n            path: path.resolve(__dirname, 'dist'), // 配置输出的路径\n            filename: 'bundle.js' // 配置输出的文件名\n        },\n        plugins:[ // 添加plugins节点配置插件\n            new htmlWebpackPlugin({\n                template:path.resolve(__dirname, 'src/index.html'),//模板路径\n                filename:'index.html'//自动生成的HTML文件的名称\n            })\n        ]\n    }\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("修改"),s("code",[e._v("package.json")]),e._v("中"),s("code",[e._v("script")]),e._v("节点中的dev指令如下：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"dev": "webpack-dev-server"\n')])])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("将index.html中script标签注释掉，因为"),s("code",[e._v("html-webpack-plugin")]),e._v("插件会自动把bundle.js注入到index.html页面中！")])]),e._v(" "),s("h2",{attrs:{id:"实现自动打开浏览器、热更新和配置浏览器的默认端口号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现自动打开浏览器、热更新和配置浏览器的默认端口号"}},[e._v("#")]),e._v(" 实现自动打开浏览器、热更新和配置浏览器的默认端口号")]),e._v(" "),s("p",[s("strong",[e._v("注意：热更新在JS中表现的不明显，可以从一会儿要讲到的CSS身上进行介绍说明！")])]),e._v(" "),s("h3",{attrs:{id:"方式1："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式1："}},[e._v("#")]),e._v(" 方式1：")]),e._v(" "),s("ul",[s("li",[e._v("修改"),s("code",[e._v("package.json")]),e._v("的script节点如下，其中"),s("code",[e._v("--open")]),e._v("表示自动打开浏览器，"),s("code",[e._v("--port 4321")]),e._v("表示打开的端口号为4321，"),s("code",[e._v("--hot")]),e._v("表示启用浏览器热更新：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"dev": "webpack-dev-server --hot --port 4321 --open"\n')])])]),s("h3",{attrs:{id:"方式2："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方式2："}},[e._v("#")]),e._v(" 方式2：")]),e._v(" "),s("ol",[s("li",[e._v("修改"),s("code",[e._v("webpack.config.js")]),e._v("文件，新增"),s("code",[e._v("devServer")]),e._v("节点如下：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("devServer:{\n        hot:true,\n        open:true,\n        port:4321\n    }\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("在头部引入"),s("code",[e._v("webpack")]),e._v("模块：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var webpack = require('webpack');\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("在"),s("code",[e._v("plugins")]),e._v("节点下新增：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("new webpack.HotModuleReplacementPlugin()\n")])])]),s("h2",{attrs:{id:"使用webpack打包css文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack打包css文件"}},[e._v("#")]),e._v(" 使用webpack打包css文件")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i style-loader css-loader --save-dev")])]),e._v(" "),s("li",[e._v("修改"),s("code",[e._v("webpack.config.js")]),e._v("这个配置文件：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("module: { // 用来配置第三方loader模块的\n        rules: [ // 文件的匹配规则\n            { test: /\\.css$/, use: ['style-loader', 'css-loader'] }//处理css文件的规则\n        ]\n    }\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("注意："),s("code",[e._v("use")]),e._v("表示使用哪些模块来处理"),s("code",[e._v("test")]),e._v("所匹配到的文件；"),s("code",[e._v("use")]),e._v("中相关loader模块的调用顺序是从后向前调用的；")])]),e._v(" "),s("h2",{attrs:{id:"使用webpack打包less文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack打包less文件"}},[e._v("#")]),e._v(" 使用webpack打包less文件")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i less-loader less -D")])]),e._v(" "),s("li",[e._v("修改"),s("code",[e._v("webpack.config.js")]),e._v("这个配置文件：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{ test: /\\.less$/, use: ['style-loader', 'css-loader', 'less-loader'] },\n")])])]),s("h2",{attrs:{id:"使用webpack打包sass文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack打包sass文件"}},[e._v("#")]),e._v(" 使用webpack打包sass文件")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i sass-loader node-sass --save-dev")])]),e._v(" "),s("li",[e._v("在"),s("code",[e._v("webpack.config.js")]),e._v("中添加处理sass文件的loader模块：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{ test: /\\.scss$/, use: ['style-loader', 'css-loader', 'sass-loader'] }\n")])])]),s("h2",{attrs:{id:"使用webpack处理css中的路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack处理css中的路径"}},[e._v("#")]),e._v(" 使用webpack处理css中的路径")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i url-loader file-loader --save-dev")])]),e._v(" "),s("li",[e._v("在"),s("code",[e._v("webpack.config.js")]),e._v("中添加处理url路径的loader模块：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{ test: /\\.(png|jpg|gif)$/, use: 'url-loader' }\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("可以通过"),s("code",[e._v("limit")]),e._v("指定进行base64编码的图片大小；只有小于指定字节（byte）的图片才会进行base64编码：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{ test: /\\.(png|jpg|gif)$/, use: 'url-loader?limit=43960' },\n")])])]),s("h2",{attrs:{id:"使用babel处理高级js语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用babel处理高级js语法"}},[e._v("#")]),e._v(" 使用babel处理高级JS语法")]),e._v(" "),s("ol",[s("li",[e._v("运行"),s("code",[e._v("cnpm i babel-core babel-loader babel-plugin-transform-runtime --save-dev")]),e._v("安装babel的相关loader包")]),e._v(" "),s("li",[e._v("运行"),s("code",[e._v("cnpm i babel-preset-es2015 babel-preset-stage-0 --save-dev")]),e._v("安装babel转换的语法")]),e._v(" "),s("li",[e._v("在"),s("code",[e._v("webpack.config.js")]),e._v("中添加相关loader模块，其中需要注意的是，一定要把"),s("code",[e._v("node_modules")]),e._v("文件夹添加到排除项：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("{ test: /\\.js$/, use: 'babel-loader', exclude: /node_modules/ }\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("在项目根目录中添加"),s("code",[e._v(".babelrc")]),e._v("文件，并修改这个配置文件如下：")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n    "presets":["es2015", "stage-0"],\n    "plugins":["transform-runtime"]\n}\n')])])]),s("ol",{attrs:{start:"5"}},[s("li",[s("strong",[e._v("注意：语法插件"),s("code",[e._v("babel-preset-es2015")]),e._v("可以更新为"),s("code",[e._v("babel-preset-env")]),e._v("，它包含了所有的ES相关的语法；")])])]),e._v(" "),s("h2",{attrs:{id:"相关文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[e._v("#")]),e._v(" 相关文章")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://segmentfault.com/p/1210000008466178",target:"_blank",rel:"noopener noreferrer"}},[e._v("babel-preset-env：你需要的唯一Babel插件"),s("OutboundLink")],1),e._v(" "),s("a",{attrs:{href:"https://segmentfault.com/a/1190000009065987",target:"_blank",rel:"noopener noreferrer"}},[e._v("Runtime transform 运行时编译es6"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=v.exports}}]);