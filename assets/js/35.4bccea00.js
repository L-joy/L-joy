(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{237:function(t,e,a){"use strict";a.r(e);var n=a(0),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-js-day1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-day1"}},[t._v("#")]),t._v(" Vue.js - Day1")]),t._v(" "),a("h2",{attrs:{id:"课程介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#课程介绍"}},[t._v("#")]),t._v(" 课程介绍")]),t._v(" "),a("p",[t._v("前5天： 都在学习Vue基本的语法和概念；打包工具 Webpack , Gulp\n后5天： 以项目驱动教学；")]),t._v(" "),a("h3",{attrs:{id:"什么是vue-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是vue-js"}},[t._v("#")]),t._v(" 什么是Vue.js")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Vue.js 是目前最火的一个前端框架，React是最流行的一个前端框架（React除了开发网站，还可以开发手机App， Vue语法也是可以用于进行手机App开发的，需要借助于Weex）")])]),t._v(" "),a("li",[a("p",[t._v("Vue.js 是前端的"),a("strong",[t._v("主流框架之一")]),t._v("，和Angular.js、React.js 一起，并成为前端三大主流框架！")])]),t._v(" "),a("li",[a("p",[t._v("Vue.js 是一套构建用户界面的框架，"),a("strong",[t._v("只关注视图层")]),t._v("，它不仅易于上手，还便于与第三方库或既有项目整合。（Vue有配套的第三方类库，可以整合起来做大型项目的开发）")])]),t._v(" "),a("li",[a("p",[t._v("前端的主要工作？主要负责MVC中的V这一层；主要工作就是和界面打交道，来制作前端页面效果；")])])]),t._v(" "),a("h2",{attrs:{id:"为什么要学习流行框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么要学习流行框架"}},[t._v("#")]),t._v(" 为什么要学习流行框架")]),t._v(" "),a("ul",[a("li",[t._v("企业为了提高开发效率：在企业中，时间就是效率，效率就是金钱；")])]),t._v(" "),a("ul",[a("li",[t._v("企业中，使用框架，能够提高开发的效率；")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("提高开发效率的发展历程：原生JS -> Jquery之类的类库 -> 前端模板引擎 -> Angular.js / Vue.js（能够帮助我们减少不必要的DOM操作；提高渲染效率；双向数据绑定的概念【通过框架提供的指令，我们前端程序员只需要关心数据的业务逻辑，不再关心DOM是如何渲染的了】）")])]),t._v(" "),a("li",[a("p",[t._v("在Vue中，一个核心的概念，就是让用户不再操作DOM元素，解放了用户的双手，让程序员可以更多的时间去关注业务逻辑；")])]),t._v(" "),a("li",[a("p",[t._v("增强自己就业时候的竞争力")])])]),t._v(" "),a("ul",[a("li",[t._v("人无我有，人有我优")]),t._v(" "),a("li",[t._v("你平时不忙的时候，都在干嘛？")])]),t._v(" "),a("h2",{attrs:{id:"框架和库的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#框架和库的区别"}},[t._v("#")]),t._v(" 框架和库的区别")]),t._v(" "),a("ul",[a("li",[t._v("框架：是一套完整的解决方案；对项目的侵入性较大，项目如果需要更换框架，则需要重新架构整个项目。")])]),t._v(" "),a("ul",[a("li",[t._v("node 中的 express；")])]),t._v(" "),a("ul",[a("li",[t._v("库（插件）：提供某一个小功能，对项目的侵入性较小，如果某个库无法完成某些需求，可以很容易切换到其它库实现需求。")])]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("从Jquery 切换到 Zepto")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("从 EJS 切换到 art-template")])])])]),t._v(" "),a("h2",{attrs:{id:"node（后端）中的-mvc-与-前端中的-mvvm-之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node（后端）中的-mvc-与-前端中的-mvvm-之间的区别"}},[t._v("#")]),t._v(" Node（后端）中的 MVC 与 前端中的 MVVM 之间的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("MVC 是后端的分层开发概念；")])]),t._v(" "),a("li",[a("p",[t._v("MVVM是前端视图层的概念，主要关注于 视图层分离，也就是说：MVVM把前端的视图层，分为了 三部分 Model, View , VM ViewModel")])]),t._v(" "),a("li",[a("p",[t._v("为什么有了MVC还要有MVVM")])])]),t._v(" "),a("h2",{attrs:{id:"vue-js-基本代码-和-mvvm-之间的对应关系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-基本代码-和-mvvm-之间的对应关系"}},[t._v("#")]),t._v(" Vue.js 基本代码 和 MVVM 之间的对应关系")]),t._v(" "),a("h2",{attrs:{id:"vue之-基本的代码结构和插值表达式、v-cloak"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue之-基本的代码结构和插值表达式、v-cloak"}},[t._v("#")]),t._v(" Vue之 - "),a("code",[t._v("基本的代码结构")]),t._v("和"),a("code",[t._v("插值表达式")]),t._v("、"),a("code",[t._v("v-cloak")])]),t._v(" "),a("h2",{attrs:{id:"vue指令之v-text和v-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-text和v-html"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-text")]),t._v("和"),a("code",[t._v("v-html")])]),t._v(" "),a("h2",{attrs:{id:"vue指令之v-bind的三种用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-bind的三种用法"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-bind")]),t._v("的三种用法")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("直接使用指令"),a("code",[t._v("v-bind")])])]),t._v(" "),a("li",[a("p",[t._v("使用简化指令"),a("code",[t._v(":")])])]),t._v(" "),a("li",[a("p",[t._v("在绑定的时候，拼接绑定内容："),a("code",[t._v(":title=\"btnTitle + ', 这是追加的内容'\"")])])])]),t._v(" "),a("h2",{attrs:{id:"vue指令之v-on和跑马灯效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-on和跑马灯效果"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-on")]),t._v("和"),a("code",[t._v("跑马灯效果")])]),t._v(" "),a("h3",{attrs:{id:"跑马灯效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跑马灯效果"}},[t._v("#")]),t._v(" 跑马灯效果")]),t._v(" "),a("ol",[a("li",[t._v("HTML结构：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<div id="app">\n\n    <p>{{info}}</p>\n\n    <input type="button" value="开启" v-on:click="go">\n\n    <input type="button" value="停止" v-on:click="stop">\n\n  </div>\n\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Vue实例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n\t// 创建 Vue 实例，得到 ViewModel\n\n    var vm = new Vue({\n\n      el: '#app',\n\n      data: {\n\n        info: '猥琐发育，别浪~！',\n\n        intervalId: null\n\n      },\n\n      methods: {\n\n        go() {\n\n          // 如果当前有定时器在运行，则直接return\n\n          if (this.intervalId != null) {\n\n            return;\n\n          }\n\n          // 开始定时器\n\n          this.intervalId = setInterval(() => {\n\n            this.info = this.info.substring(1) + this.info.substring(0, 1);\n\n          }, 500);\n\n        },\n\n        stop() {\n\n          clearInterval(this.intervalId);\n\n        }\n\n      }\n\n    });\n\n")])])]),a("h2",{attrs:{id:"vue指令之v-on的缩写和事件修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-on的缩写和事件修饰符"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-on的缩写")]),t._v("和"),a("code",[t._v("事件修饰符")])]),t._v(" "),a("h3",{attrs:{id:"事件修饰符："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件修饰符："}},[t._v("#")]),t._v(" 事件修饰符：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v(".stop       阻止冒泡")])]),t._v(" "),a("li",[a("p",[t._v(".prevent    阻止默认事件")])]),t._v(" "),a("li",[a("p",[t._v(".capture    添加事件侦听器时使用事件捕获模式")])]),t._v(" "),a("li",[a("p",[t._v(".self       只当事件在该元素本身（比如不是子元素）触发时触发回调")])]),t._v(" "),a("li",[a("p",[t._v(".once       事件只触发一次")])])]),t._v(" "),a("h2",{attrs:{id:"vue指令之v-model和双向数据绑定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-model和双向数据绑定"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-model")]),t._v("和"),a("code",[t._v("双向数据绑定")])]),t._v(" "),a("h2",{attrs:{id:"简易计算器案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简易计算器案例"}},[t._v("#")]),t._v(" 简易计算器案例")]),t._v(" "),a("ol",[a("li",[t._v("HTML 代码结构")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n  <div id="app">\n\n    <input type="text" v-model="n1">\n\n    <select v-model="opt">\n\n      <option value="0">+</option>\n\n      <option value="1">-</option>\n\n      <option value="2">*</option>\n\n      <option value="3">÷</option>\n\n    </select>\n\n    <input type="text" v-model="n2">\n\n    <input type="button" value="=" v-on:click="getResult">\n\n    <input type="text" v-model="result">\n\n  </div>\n\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Vue实例代码：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n\t// 创建 Vue 实例，得到 ViewModel\n\n    var vm = new Vue({\n\n      el: '#app',\n\n      data: {\n\n        n1: 0,\n\n        n2: 0,\n\n        result: 0,\n\n        opt: '0'\n\n      },\n\n      methods: {\n\n        getResult() {\n\n          switch (this.opt) {\n\n            case '0':\n\n              this.result = parseInt(this.n1) + parseInt(this.n2);\n\n              break;\n\n            case '1':\n\n              this.result = parseInt(this.n1) - parseInt(this.n2);\n\n              break;\n\n            case '2':\n\n              this.result = parseInt(this.n1) * parseInt(this.n2);\n\n              break;\n\n            case '3':\n\n              this.result = parseInt(this.n1) / parseInt(this.n2);\n\n              break;\n\n          }\n\n        }\n\n      }\n\n    });\n\n")])])]),a("h2",{attrs:{id:"在vue中使用样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在vue中使用样式"}},[t._v("#")]),t._v(" 在Vue中使用样式")]),t._v(" "),a("h3",{attrs:{id:"使用class样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用class样式"}},[t._v("#")]),t._v(" 使用class样式")]),t._v(" "),a("ol",[a("li",[t._v("数组")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<h1 :class=\"['red', 'thin']\">这是一个邪恶的H1</h1>\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("数组中使用三元表达式")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<h1 :class=\"['red', 'thin', isactive?'active':'']\">这是一个邪恶的H1</h1>\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("数组中嵌套对象")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<h1 :class=\"['red', 'thin', {'active': isactive}]\">这是一个邪恶的H1</h1>\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("直接使用对象")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<h1 :class="{red:true, italic:true, active:true, thin:true}">这是一个邪恶的H1</h1>\n')])])]),a("h3",{attrs:{id:"使用内联样式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用内联样式"}},[t._v("#")]),t._v(" 使用内联样式")]),t._v(" "),a("ol",[a("li",[t._v("直接在元素上通过 "),a("code",[t._v(":style")]),t._v(" 的形式，书写样式对象")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<h1 :style=\"{color: 'red', 'font-size': '40px'}\">这是一个善良的H1</h1>\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("将样式对象，定义到 "),a("code",[t._v("data")]),t._v(" 中，并直接引用到 "),a("code",[t._v(":style")]),t._v(" 中")])]),t._v(" "),a("ul",[a("li",[t._v("在data上定义样式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("data: {\n        h1StyleObj: { color: 'red', 'font-size': '40px', 'font-weight': '200' }\n}\n")])])]),a("ul",[a("li",[t._v("在元素中，通过属性绑定的形式，将样式对象应用到元素中：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<h1 :style="h1StyleObj">这是一个善良的H1</h1>\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("在 "),a("code",[t._v(":style")]),t._v(" 中通过数组，引用多个 "),a("code",[t._v("data")]),t._v(" 上的样式对象")])]),t._v(" "),a("ul",[a("li",[t._v("在data上定义样式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("data: {\n        h1StyleObj: { color: 'red', 'font-size': '40px', 'font-weight': '200' },\n        h1StyleObj2: { fontStyle: 'italic' }\n}\n")])])]),a("ul",[a("li",[t._v("在元素中，通过属性绑定的形式，将样式对象应用到元素中：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<h1 :style="[h1StyleObj, h1StyleObj2]">这是一个善良的H1</h1>\n')])])]),a("h2",{attrs:{id:"vue指令之v-for和key属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-for和key属性"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-for")]),t._v("和"),a("code",[t._v("key")]),t._v("属性")]),t._v(" "),a("ol",[a("li",[t._v("迭代数组")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<ul>\n  <li v-for="(item, i) in list">索引：{{i}} --- 姓名：{{item.name}} --- 年龄：{{item.age}}</li>\n</ul>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("迭代对象中的属性")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n\t\x3c!-- 循环遍历对象身上的属性 --\x3e\n\n    <div v-for="(val, key, i) in userInfo">{{val}} --- {{key}} --- {{i}}</div>\n\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("迭代数字")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<p v-for="i in 10">这是第 {{i}} 个P标签</p>\n\n')])])]),a("blockquote",[a("p",[t._v("2.2.0+ 的版本里，"),a("strong",[t._v("当在组件中使用")]),t._v(" v-for 时，key 现在是必须的。")])]),t._v(" "),a("p",[t._v("当 Vue.js 用 v-for 正在更新已渲染过的元素列表时，它默认用 “"),a("strong",[t._v("就地复用")]),t._v("” 策略。如果数据项的顺序被改变，Vue将"),a("strong",[t._v("不是移动 DOM 元素来匹配数据项的顺序")]),t._v("， 而是"),a("strong",[t._v("简单复用此处每个元素")]),t._v("，并且确保它在特定索引下显示已被渲染过的每个元素。")]),t._v(" "),a("p",[t._v("为了给 Vue 一个提示，"),a("strong",[t._v("以便它能跟踪每个节点的身份，从而重用和重新排序现有元素")]),t._v("，你需要为每项提供一个唯一 key 属性。")]),t._v(" "),a("h2",{attrs:{id:"vue指令之v-if和v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue指令之v-if和v-show"}},[t._v("#")]),t._v(" Vue指令之"),a("code",[t._v("v-if")]),t._v("和"),a("code",[t._v("v-show")])]),t._v(" "),a("blockquote",[a("p",[t._v("一般来说，v-if 有更高的切换消耗而 v-show 有更高的初始渲染消耗。因此，如果需要频繁切换 v-show 较好，如果在运行时条件不大可能改变 v-if 较好。")])]),t._v(" "),a("h2",{attrs:{id:"品牌管理案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#品牌管理案例"}},[t._v("#")]),t._v(" 品牌管理案例")]),t._v(" "),a("h3",{attrs:{id:"添加新品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加新品牌"}},[t._v("#")]),t._v(" 添加新品牌")]),t._v(" "),a("h3",{attrs:{id:"删除品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除品牌"}},[t._v("#")]),t._v(" 删除品牌")]),t._v(" "),a("h3",{attrs:{id:"根据条件筛选品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据条件筛选品牌"}},[t._v("#")]),t._v(" 根据条件筛选品牌")]),t._v(" "),a("ol",[a("li",[t._v("1.x 版本中的filterBy指令，在2.x中已经被废除：")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://v1-cn.vuejs.org/api/#filterBy",target:"_blank",rel:"noopener noreferrer"}},[t._v("filterBy - 指令"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<tr v-for="item in list | filterBy searchName in \'name\'">\n\n  <td>{{item.id}}</td>\n\n  <td>{{item.name}}</td>\n\n  <td>{{item.ctime}}</td>\n\n  <td>\n\n    <a href="#" @click.prevent="del(item.id)">删除</a>\n\n  </td>\n\n</tr>\n\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在2.x版本中"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html#%E6%98%BE%E7%A4%BA%E8%BF%87%E6%BB%A4-%E6%8E%92%E5%BA%8F%E7%BB%93%E6%9E%9C",target:"_blank",rel:"noopener noreferrer"}},[t._v("手动实现筛选的方式"),a("OutboundLink")],1),t._v("：")])]),t._v(" "),a("ul",[a("li",[t._v("筛选框绑定到 VM 实例中的 "),a("code",[t._v("searchName")]),t._v(" 属性：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<hr> 输入筛选名称：\n\n<input type="text" v-model="searchName">\n\n')])])]),a("ul",[a("li",[t._v("在使用 "),a("code",[t._v("v-for")]),t._v(" 指令循环每一行数据的时候，不再直接 "),a("code",[t._v("item in list")]),t._v("，而是 "),a("code",[t._v("in")]),t._v(" 一个 过滤的methods 方法，同时，把过滤条件"),a("code",[t._v("searchName")]),t._v("传递进去：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<tbody>\n\n      <tr v-for="item in search(searchName)">\n\n        <td>{{item.id}}</td>\n\n        <td>{{item.name}}</td>\n\n        <td>{{item.ctime}}</td>\n\n        <td>\n\n          <a href="#" @click.prevent="del(item.id)">删除</a>\n\n        </td>\n\n      </tr>\n\n    </tbody>\n\n')])])]),a("ul",[a("li",[a("code",[t._v("search")]),t._v(" 过滤方法中，使用 数组的 "),a("code",[t._v("filter")]),t._v(" 方法进行过滤：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nsearch(name) {\n\n  return this.list.filter(x => {\n\n    return x.name.indexOf(name) != -1;\n\n  });\n\n}\n\n")])])]),a("h2",{attrs:{id:"vue调试工具vue-devtools的安装步骤和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue调试工具vue-devtools的安装步骤和使用"}},[t._v("#")]),t._v(" Vue调试工具"),a("code",[t._v("vue-devtools")]),t._v("的安装步骤和使用")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js devtools - 翻墙安装方式 - 推荐"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[t._v("#")]),t._v(" 过滤器")]),t._v(" "),a("p",[t._v("概念：Vue.js 允许你自定义过滤器，"),a("strong",[t._v("可被用作一些常见的文本格式化")]),t._v("。过滤器可以用在两个地方："),a("strong",[t._v("mustache 插值和 v-bind 表达式")]),t._v("。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符指示；")]),t._v(" "),a("h3",{attrs:{id:"私有过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#私有过滤器"}},[t._v("#")]),t._v(" 私有过滤器")]),t._v(" "),a("ol",[a("li",[t._v("HTML元素：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n<td>{{item.ctime | dataFormat('yyyy-mm-dd')}}</td>\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("私有 "),a("code",[t._v("filters")]),t._v(" 定义方式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nfilters: { // 私有局部过滤器，只能在 当前 VM 对象所控制的 View 区域进行使用\n\n    dataFormat(input, pattern = \"\") { // 在参数列表中 通过 pattern=\"\" 来指定形参默认值，防止报错\n\n      var dt = new Date(input);\n\n      // 获取年月日\n\n      var y = dt.getFullYear();\n\n      var m = (dt.getMonth() + 1).toString().padStart(2, '0');\n\n      var d = dt.getDate().toString().padStart(2, '0');\n\n\n\n      // 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日\n\n      // 否则，就返回  年-月-日 时：分：秒\n\n      if (pattern.toLowerCase() === 'yyyy-mm-dd') {\n\n        return `${y}-${m}-${d}`;\n\n      } else {\n\n        // 获取时分秒\n\n        var hh = dt.getHours().toString().padStart(2, '0');\n\n        var mm = dt.getMinutes().toString().padStart(2, '0');\n\n        var ss = dt.getSeconds().toString().padStart(2, '0');\n\n\n\n        return `${y}-${m}-${d} ${hh}:${mm}:${ss}`;\n\n      }\n\n    }\n\n  }\n\n")])])]),a("blockquote",[a("p",[t._v("使用ES6中的字符串新方法 String.prototype.padStart(maxLength, fillString='') 或 String.prototype.padEnd(maxLength, fillString='')来填充字符串；")])]),t._v(" "),a("h3",{attrs:{id:"全局过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局过滤器"}},[t._v("#")]),t._v(" 全局过滤器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n// 定义一个全局过滤器\n\nVue.filter('dataFormat', function (input, pattern = '') {\n\n  var dt = new Date(input);\n\n  // 获取年月日\n\n  var y = dt.getFullYear();\n\n  var m = (dt.getMonth() + 1).toString().padStart(2, '0');\n\n  var d = dt.getDate().toString().padStart(2, '0');\n\n\n\n  // 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日\n\n  // 否则，就返回  年-月-日 时：分：秒\n\n  if (pattern.toLowerCase() === 'yyyy-mm-dd') {\n\n    return `${y}-${m}-${d}`;\n\n  } else {\n\n    // 获取时分秒\n\n    var hh = dt.getHours().toString().padStart(2, '0');\n\n    var mm = dt.getMinutes().toString().padStart(2, '0');\n\n    var ss = dt.getSeconds().toString().padStart(2, '0');\n\n\n\n    return `${y}-${m}-${d} ${hh}:${mm}:${ss}`;\n\n  }\n\n});\n\n")])])]),a("blockquote",[a("p",[t._v("注意：当有局部和全局两个名称相同的过滤器时候，会以就近原则进行调用，即：局部过滤器优先于全局过滤器被调用！")])]),t._v(" "),a("h2",{attrs:{id:"键盘修饰符以及自定义键盘修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键盘修饰符以及自定义键盘修饰符"}},[t._v("#")]),t._v(" 键盘修饰符以及自定义键盘修饰符")]),t._v(" "),a("h3",{attrs:{id:"_1-x中自定义键盘修饰符【了解即可】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x中自定义键盘修饰符【了解即可】"}},[t._v("#")]),t._v(" 1.x中自定义键盘修饰符【了解即可】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nVue.directive('on').keyCodes.f2 = 113;\n\n")])])]),a("h3",{attrs:{id:"_2-x中自定义键盘修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-x中自定义键盘修饰符"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/events.html#%E9%94%AE%E5%80%BC%E4%BF%AE%E9%A5%B0%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.x中自定义键盘修饰符"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("通过"),a("code",[t._v("Vue.config.keyCodes.名称 = 按键值")]),t._v("来自定义案件修饰符的别名：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nVue.config.keyCodes.f2 = 113;\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用自定义的按键修饰符：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<input type="text" v-model="name" @keyup.f2="add">\n\n')])])]),a("h2",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/custom-directive.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义指令"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("自定义全局和局部的 自定义指令：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n    // 自定义全局指令 v-focus，为绑定的元素自动获取焦点：\n\n    Vue.directive('focus', {\n\n      inserted: function (el) { // inserted 表示被绑定元素插入父节点时调用\n\n        el.focus();\n\n      }\n\n    });\n\n\n\n    // 自定义局部指令 v-color 和 v-font-weight，为绑定的元素设置指定的字体颜色 和 字体粗细：\n\n      directives: {\n\n        color: { // 为元素设置指定的字体颜色\n\n          bind(el, binding) {\n\n            el.style.color = binding.value;\n\n          }\n\n        },\n\n        'font-weight': function (el, binding2) { // 自定义指令的简写形式，等同于定义了 bind 和 update 两个钩子函数\n\n          el.style.fontWeight = binding2.value;\n\n        }\n\n      }\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("自定义指令的使用方式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<input type="text" v-model="searchName" v-focus v-color="\'red\'" v-font-weight="900">\n\n')])])]),a("h2",{attrs:{id:"vue-1-x-中-自定义元素指令【已废弃-了解即可】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-1-x-中-自定义元素指令【已废弃-了解即可】"}},[t._v("#")]),t._v(" Vue 1.x 中 自定义元素指令【已废弃,了解即可】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Vue.elementDirective('red-color', {\n  bind: function () {\n    this.el.style.color = 'red';\n  }\n});\n")])])]),a("p",[t._v("使用方式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<red-color>1232</red-color>\n")])])]),a("h2",{attrs:{id:"相关文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[t._v("#")]),t._v(" 相关文章")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://v1-cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue.js 1.x 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue.js 2.x 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.css88.com/archives/7715",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.padStart(maxLength, fillString)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.cnblogs.com/wuhua1/p/6686237.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 里面的键盘事件对应的键码"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.cnblogs.com/kidney/p/6052935.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js双向绑定的实现原理"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=s.exports}}]);