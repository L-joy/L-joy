(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{240:function(t,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue-js-day2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-js-day2"}},[t._v("#")]),t._v(" Vue.js - Day2")]),t._v(" "),a("h2",{attrs:{id:"品牌管理案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#品牌管理案例"}},[t._v("#")]),t._v(" 品牌管理案例")]),t._v(" "),a("h3",{attrs:{id:"添加新品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加新品牌"}},[t._v("#")]),t._v(" 添加新品牌")]),t._v(" "),a("h3",{attrs:{id:"删除品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除品牌"}},[t._v("#")]),t._v(" 删除品牌")]),t._v(" "),a("h3",{attrs:{id:"根据条件筛选品牌"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据条件筛选品牌"}},[t._v("#")]),t._v(" 根据条件筛选品牌")]),t._v(" "),a("ol",[a("li",[t._v("1.x 版本中的filterBy指令，在2.x中已经被废除：")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://v1-cn.vuejs.org/api/#filterBy",target:"_blank",rel:"noopener noreferrer"}},[t._v("filterBy - 指令"),a("OutboundLink")],1)]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<tr v-for="item in list | filterBy searchName in \'name\'">\n\n  <td>{{item.id}}</td>\n\n  <td>{{item.name}}</td>\n\n  <td>{{item.ctime}}</td>\n\n  <td>\n\n    <a href="#" @click.prevent="del(item.id)">删除</a>\n\n  </td>\n\n</tr>\n\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("在2.x版本中"),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/list.html#%E6%98%BE%E7%A4%BA%E8%BF%87%E6%BB%A4-%E6%8E%92%E5%BA%8F%E7%BB%93%E6%9E%9C",target:"_blank",rel:"noopener noreferrer"}},[t._v("手动实现筛选的方式"),a("OutboundLink")],1),t._v("：")])]),t._v(" "),a("ul",[a("li",[t._v("筛选框绑定到 VM 实例中的 "),a("code",[t._v("searchName")]),t._v(" 属性：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<hr> 输入筛选名称：\n\n<input type="text" v-model="searchName">\n\n')])])]),a("ul",[a("li",[t._v("在使用 "),a("code",[t._v("v-for")]),t._v(" 指令循环每一行数据的时候，不再直接 "),a("code",[t._v("item in list")]),t._v("，而是 "),a("code",[t._v("in")]),t._v(" 一个 过滤的methods 方法，同时，把过滤条件"),a("code",[t._v("searchName")]),t._v("传递进去：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<tbody>\n\n      <tr v-for="item in search(searchName)">\n\n        <td>{{item.id}}</td>\n\n        <td>{{item.name}}</td>\n\n        <td>{{item.ctime}}</td>\n\n        <td>\n\n          <a href="#" @click.prevent="del(item.id)">删除</a>\n\n        </td>\n\n      </tr>\n\n    </tbody>\n\n')])])]),a("ul",[a("li",[a("code",[t._v("search")]),t._v(" 过滤方法中，使用 数组的 "),a("code",[t._v("filter")]),t._v(" 方法进行过滤：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nsearch(name) {\n\n  return this.list.filter(x => {\n\n    return x.name.indexOf(name) != -1;\n\n  });\n\n}\n\n")])])]),a("h2",{attrs:{id:"vue调试工具vue-devtools的安装步骤和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue调试工具vue-devtools的安装步骤和使用"}},[t._v("#")]),t._v(" Vue调试工具"),a("code",[t._v("vue-devtools")]),t._v("的安装步骤和使用")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue.js devtools - 翻墙安装方式 - 推荐"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#过滤器"}},[t._v("#")]),t._v(" 过滤器")]),t._v(" "),a("p",[t._v("概念：Vue.js 允许你自定义过滤器，"),a("strong",[t._v("可被用作一些常见的文本格式化")]),t._v("。过滤器可以用在两个地方："),a("strong",[t._v("mustache 插值和 v-bind 表达式")]),t._v("。过滤器应该被添加在 JavaScript 表达式的尾部，由“管道”符指示；")]),t._v(" "),a("h3",{attrs:{id:"私有过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#私有过滤器"}},[t._v("#")]),t._v(" 私有过滤器")]),t._v(" "),a("ol",[a("li",[t._v("HTML元素：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n<td>{{item.ctime | dataFormat('yyyy-mm-dd')}}</td>\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("私有 "),a("code",[t._v("filters")]),t._v(" 定义方式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nfilters: { // 私有局部过滤器，只能在 当前 VM 对象所控制的 View 区域进行使用\n\n    dataFormat(input, pattern = \"\") { // 在参数列表中 通过 pattern=\"\" 来指定形参默认值，防止报错\n\n      var dt = new Date(input);\n\n      // 获取年月日\n\n      var y = dt.getFullYear();\n\n      var m = (dt.getMonth() + 1).toString().padStart(2, '0');\n\n      var d = dt.getDate().toString().padStart(2, '0');\n\n\n\n      // 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日\n\n      // 否则，就返回  年-月-日 时：分：秒\n\n      if (pattern.toLowerCase() === 'yyyy-mm-dd') {\n\n        return `${y}-${m}-${d}`;\n\n      } else {\n\n        // 获取时分秒\n\n        var hh = dt.getHours().toString().padStart(2, '0');\n\n        var mm = dt.getMinutes().toString().padStart(2, '0');\n\n        var ss = dt.getSeconds().toString().padStart(2, '0');\n\n\n\n        return `${y}-${m}-${d} ${hh}:${mm}:${ss}`;\n\n      }\n\n    }\n\n  }\n\n")])])]),a("blockquote",[a("p",[t._v("使用ES6中的字符串新方法 String.prototype.padStart(maxLength, fillString='') 或 String.prototype.padEnd(maxLength, fillString='')来填充字符串；")])]),t._v(" "),a("h3",{attrs:{id:"全局过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局过滤器"}},[t._v("#")]),t._v(" 全局过滤器")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n// 定义一个全局过滤器\n\nVue.filter('dataFormat', function (input, pattern = '') {\n\n  var dt = new Date(input);\n\n  // 获取年月日\n\n  var y = dt.getFullYear();\n\n  var m = (dt.getMonth() + 1).toString().padStart(2, '0');\n\n  var d = dt.getDate().toString().padStart(2, '0');\n\n\n\n  // 如果 传递进来的字符串类型，转为小写之后，等于 yyyy-mm-dd，那么就返回 年-月-日\n\n  // 否则，就返回  年-月-日 时：分：秒\n\n  if (pattern.toLowerCase() === 'yyyy-mm-dd') {\n\n    return `${y}-${m}-${d}`;\n\n  } else {\n\n    // 获取时分秒\n\n    var hh = dt.getHours().toString().padStart(2, '0');\n\n    var mm = dt.getMinutes().toString().padStart(2, '0');\n\n    var ss = dt.getSeconds().toString().padStart(2, '0');\n\n\n\n    return `${y}-${m}-${d} ${hh}:${mm}:${ss}`;\n\n  }\n\n});\n\n")])])]),a("blockquote",[a("p",[t._v("注意：当有局部和全局两个名称相同的过滤器时候，会以就近原则进行调用，即：局部过滤器优先于全局过滤器被调用！")])]),t._v(" "),a("h2",{attrs:{id:"键盘修饰符以及自定义键盘修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键盘修饰符以及自定义键盘修饰符"}},[t._v("#")]),t._v(" 键盘修饰符以及自定义键盘修饰符")]),t._v(" "),a("h3",{attrs:{id:"_1-x中自定义键盘修饰符【了解即可】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-x中自定义键盘修饰符【了解即可】"}},[t._v("#")]),t._v(" 1.x中自定义键盘修饰符【了解即可】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nVue.directive('on').keyCodes.f2 = 113;\n\n")])])]),a("h3",{attrs:{id:"_2-x中自定义键盘修饰符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-x中自定义键盘修饰符"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/events.html#%E9%94%AE%E5%80%BC%E4%BF%AE%E9%A5%B0%E7%AC%A6",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.x中自定义键盘修饰符"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("通过"),a("code",[t._v("Vue.config.keyCodes.名称 = 按键值")]),t._v("来自定义案件修饰符的别名：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\nVue.config.keyCodes.f2 = 113;\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用自定义的按键修饰符：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<input type="text" v-model="name" @keyup.f2="add">\n\n')])])]),a("h2",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/custom-directive.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("自定义指令"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("自定义全局和局部的 自定义指令：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("\n    // 自定义全局指令 v-focus，为绑定的元素自动获取焦点：\n\n    Vue.directive('focus', {\n\n      inserted: function (el) { // inserted 表示被绑定元素插入父节点时调用\n\n        el.focus();\n\n      }\n\n    });\n\n\n\n    // 自定义局部指令 v-color 和 v-font-weight，为绑定的元素设置指定的字体颜色 和 字体粗细：\n\n      directives: {\n\n        color: { // 为元素设置指定的字体颜色\n\n          bind(el, binding) {\n\n            el.style.color = binding.value;\n\n          }\n\n        },\n\n        'font-weight': function (el, binding2) { // 自定义指令的简写形式，等同于定义了 bind 和 update 两个钩子函数\n\n          el.style.fontWeight = binding2.value;\n\n        }\n\n      }\n\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("自定义指令的使用方式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('\n<input type="text" v-model="searchName" v-focus v-color="\'red\'" v-font-weight="900">\n\n')])])]),a("h2",{attrs:{id:"vue-1-x-中-自定义元素指令【已废弃-了解即可】"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-1-x-中-自定义元素指令【已废弃-了解即可】"}},[t._v("#")]),t._v(" Vue 1.x 中 自定义元素指令【已废弃,了解即可】")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Vue.elementDirective('red-color', {\n  bind: function () {\n    this.el.style.color = 'red';\n  }\n});\n")])])]),a("p",[t._v("使用方式：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<red-color>1232</red-color>\n")])])]),a("h2",{attrs:{id:"vue实例的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue实例的生命周期"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/instance.html#%E5%AE%9E%E4%BE%8B%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue实例的生命周期"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("什么是生命周期：从Vue实例创建、运行、到销毁期间，总是伴随着各种各样的事件，这些事件，统称为生命周期！")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90",target:"_blank",rel:"noopener noreferrer"}},[t._v("生命周期钩子"),a("OutboundLink")],1),t._v("：就是生命周期事件的别名而已；")]),t._v(" "),a("li",[t._v("生命周期钩子 = 生命周期函数 = 生命周期事件")]),t._v(" "),a("li",[t._v("主要的生命周期函数分类：")])]),t._v(" "),a("ul",[a("li",[t._v("创建期间的生命周期函数：\n"),a("ul",[a("li",[t._v("beforeCreate：实例刚在内存中被创建出来，此时，还没有初始化好 data 和 methods 属性")]),t._v(" "),a("li",[t._v("created：实例已经在内存中创建OK，此时 data 和 methods 已经创建OK，此时还没有开始 编译模板")]),t._v(" "),a("li",[t._v("beforeMount：此时已经完成了模板的编译，但是还没有挂载到页面中")]),t._v(" "),a("li",[t._v("mounted：此时，已经将编译好的模板，挂载到了页面指定的容器中显示")])])]),t._v(" "),a("li",[t._v("运行期间的生命周期函数：\n"),a("ul",[a("li",[t._v("beforeUpdate：状态更新之前执行此函数， 此时 data 中的状态值是最新的，但是界面上显示的 数据还是旧的，因为此时还没有开始重新渲染DOM节点")]),t._v(" "),a("li",[t._v("updated：实例更新完毕之后调用此函数，此时 data 中的状态值 和 界面上显示的数据，都已经完成了更新，界面已经被重新渲染好了！")])])]),t._v(" "),a("li",[t._v("销毁期间的生命周期函数：\n"),a("ul",[a("li",[t._v("beforeDestroy：实例销毁之前调用。在这一步，实例仍然完全可用。")]),t._v(" "),a("li",[t._v("destroyed：Vue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。")])])])]),t._v(" "),a("h2",{attrs:{id:"vue-resource-实现-get-post-jsonp请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-resource-实现-get-post-jsonp请求"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://github.com/pagekit/vue-resource",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue-resource 实现 get, post, jsonp请求"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("除了 vue-resource 之外，还可以使用 "),a("code",[t._v("axios")]),t._v(" 的第三方包实现实现数据的请求")]),t._v(" "),a("ol",[a("li",[t._v("之前的学习中，如何发起数据请求？")]),t._v(" "),a("li",[t._v("常见的数据请求类型？  get  post jsonp")]),t._v(" "),a("li",[t._v("测试的URL请求资源地址：")])]),t._v(" "),a("ul",[a("li",[t._v("get请求地址： http://vue.studyit.io/api/getlunbo")]),t._v(" "),a("li",[t._v("post请求地址：http://vue.studyit.io/api/post")]),t._v(" "),a("li",[t._v("jsonp请求地址：http://vue.studyit.io/api/jsonp")])]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("JSONP的实现原理")])]),t._v(" "),a("ul",[a("li",[t._v("由于浏览器的安全性限制，不允许AJAX访问 协议不同、域名不同、端口号不同的 数据接口，浏览器认为这种访问不安全；")]),t._v(" "),a("li",[t._v("可以通过动态创建script标签的形式，把script标签的src属性，指向数据接口的地址，因为script标签不存在跨域限制，这种数据获取方式，称作JSONP（注意：根据JSONP的实现原理，知晓，JSONP只支持Get请求）；")]),t._v(" "),a("li",[t._v("具体实现过程：\n"),a("ul",[a("li",[t._v("先在客户端定义一个回调方法，预定义对数据的操作；")]),t._v(" "),a("li",[t._v("再把这个回调方法的名称，通过URL传参的形式，提交到服务器的数据接口；")]),t._v(" "),a("li",[t._v("服务器数据接口组织好要发送给客户端的数据，再拿着客户端传递过来的回调方法名称，拼接出一个调用这个方法的字符串，发送给客户端去解析执行；")]),t._v(" "),a("li",[t._v("客户端拿到服务器返回的字符串之后，当作Script脚本去解析执行，这样就能够拿到JSONP的数据了；")])])]),t._v(" "),a("li",[t._v("带大家通过 Node.js ，来手动实现一个JSONP的请求例子；")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("   const http = require('http');\n   // 导入解析 URL 地址的核心模块\n   const urlModule = require('url');\n\n   const server = http.createServer();\n   // 监听 服务器的 request 请求事件，处理每个请求\n   server.on('request', (req, res) => {\n     const url = req.url;\n\n     // 解析客户端请求的URL地址\n     var info = urlModule.parse(url, true);\n\n     // 如果请求的 URL 地址是 /getjsonp ，则表示要获取JSONP类型的数据\n     if (info.pathname === '/getjsonp') {\n       // 获取客户端指定的回调函数的名称\n       var cbName = info.query.callback;\n       // 手动拼接要返回给客户端的数据对象\n       var data = {\n         name: 'zs',\n         age: 22,\n         gender: '男',\n         hobby: ['吃饭', '睡觉', '运动']\n       }\n       // 拼接出一个方法的调用，在调用这个方法的时候，把要发送给客户端的数据，序列化为字符串，作为参数传递给这个调用的方法：\n       var result = `${cbName}(${JSON.stringify(data)})`;\n       // 将拼接好的方法的调用，返回给客户端去解析执行\n       res.end(result);\n     } else {\n       res.end('404');\n     }\n   });\n\n   server.listen(3000, () => {\n     console.log('server running at http://127.0.0.1:3000');\n   });\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("vue-resource 的配置步骤：")])]),t._v(" "),a("ul",[a("li",[t._v("直接在页面中，通过"),a("code",[t._v("script")]),t._v("标签，引入 "),a("code",[t._v("vue-resource")]),t._v(" 的脚本文件；")]),t._v(" "),a("li",[t._v("注意：引用的先后顺序是：先引用 "),a("code",[t._v("Vue")]),t._v(" 的脚本文件，再引用 "),a("code",[t._v("vue-resource")]),t._v(" 的脚本文件；")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("发送get请求：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("getInfo() { // get 方式获取数据\n  this.$http.get('http://127.0.0.1:8899/api/getlunbo').then(res => {\n    console.log(res.body);\n  })\n}\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("发送post请求：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("postInfo() {\n  var url = 'http://127.0.0.1:8899/api/post';\n  // post 方法接收三个参数：\n  // 参数1： 要请求的URL地址\n  // 参数2： 要发送的数据对象\n  // 参数3： 指定post提交的编码类型为 application/x-www-form-urlencoded\n  this.$http.post(url, { name: 'zs' }, { emulateJSON: true }).then(res => {\n    console.log(res.body);\n  });\n}\n")])])]),a("ol",{attrs:{start:"8"}},[a("li",[t._v("发送JSONP请求获取数据：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("jsonpInfo() { // JSONP形式从服务器获取数据\n  var url = 'http://127.0.0.1:8899/api/jsonp';\n  this.$http.jsonp(url).then(res => {\n    console.log(res.body);\n  });\n}\n")])])]),a("h2",{attrs:{id:"配置本地数据库和数据接口api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置本地数据库和数据接口api"}},[t._v("#")]),t._v(" 配置本地数据库和数据接口API")]),t._v(" "),a("ol",[a("li",[t._v("先解压安装 "),a("code",[t._v("PHPStudy")]),t._v(";")]),t._v(" "),a("li",[t._v("解压安装 "),a("code",[t._v("Navicat")]),t._v(" 这个数据库可视化工具，并激活；")]),t._v(" "),a("li",[t._v("打开 "),a("code",[t._v("Navicat")]),t._v(" 工具，新建空白数据库，名为 "),a("code",[t._v("dtcmsdb4")]),t._v(";")]),t._v(" "),a("li",[t._v("双击新建的数据库，连接上这个空白数据库，在新建的数据库上"),a("code",[t._v("右键")]),t._v(" -> "),a("code",[t._v("运行SQL文件")]),t._v("，选择并执行 "),a("code",[t._v("dtcmsdb4.sql")]),t._v(" 这个数据库脚本文件；如果执行不报错，则数据库导入完成；")]),t._v(" "),a("li",[t._v("进入文件夹 "),a("code",[t._v("vuecms3_nodejsapi")]),t._v(" 内部，执行 "),a("code",[t._v("npm i")]),t._v(" 安装所有的依赖项；")]),t._v(" "),a("li",[t._v("先确保本机安装了 "),a("code",[t._v("nodemon")]),t._v(", 没有安装，则运行 "),a("code",[t._v("npm i nodemon -g")]),t._v(" 进行全局安装，安装完毕后，进入到 "),a("code",[t._v("vuecms3_nodejsapi")]),t._v("目录 -> "),a("code",[t._v("src")]),t._v("目录 -> 双击运行 "),a("code",[t._v("start.bat")])]),t._v(" "),a("li",[t._v("如果API启动失败，请检查 PHPStudy 是否正常开启，同时，检查 "),a("code",[t._v("app.js")]),t._v(" 中第 "),a("code",[t._v("14行")]),t._v(" 中数据库连接配置字符串是否正确；PHPStudy 中默认的 用户名是root，默认的密码也是root")])]),t._v(" "),a("h2",{attrs:{id:"品牌管理改造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#品牌管理改造"}},[t._v("#")]),t._v(" 品牌管理改造")]),t._v(" "),a("h3",{attrs:{id:"展示品牌列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#展示品牌列表"}},[t._v("#")]),t._v(" 展示品牌列表")]),t._v(" "),a("h3",{attrs:{id:"添加品牌数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加品牌数据"}},[t._v("#")]),t._v(" 添加品牌数据")]),t._v(" "),a("h3",{attrs:{id:"删除品牌数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除品牌数据"}},[t._v("#")]),t._v(" 删除品牌数据")]),t._v(" "),a("h2",{attrs:{id:"vue中的动画"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue中的动画"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue中的动画"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("为什么要有动画：动画能够提高用户的体验，帮助用户更好的理解页面中的功能；")]),t._v(" "),a("h3",{attrs:{id:"使用过渡类名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用过渡类名"}},[t._v("#")]),t._v(" 使用过渡类名")]),t._v(" "),a("ol",[a("li",[t._v("HTML结构：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div id="app">\n    <input type="button" value="动起来" @click="myAnimate">\n    \x3c!-- 使用 transition 将需要过渡的元素包裹起来 --\x3e\n    <transition name="fade">\n      <div v-show="isshow">动画哦</div>\n    </transition>\n  </div>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("VM 实例：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 创建 Vue 实例，得到 ViewModel\nvar vm = new Vue({\n  el: '#app',\n  data: {\n    isshow: false\n  },\n  methods: {\n    myAnimate() {\n      this.isshow = !this.isshow;\n    }\n  }\n});\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("定义两组类样式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/* 定义进入和离开时候的过渡状态 */\n    .fade-enter-active,\n    .fade-leave-active {\n      transition: all 0.2s ease;\n      position: absolute;\n    }\n\n    /* 定义进入过渡的开始状态 和 离开过渡的结束状态 */\n    .fade-enter,\n    .fade-leave-to {\n      opacity: 0;\n      transform: translateX(100px);\n    }\n")])])]),a("h3",{attrs:{id:"使用第三方-css-动画库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用第三方-css-动画库"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BF%87%E6%B8%A1%E7%B1%BB%E5%90%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用第三方 CSS 动画库"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("导入动画类库：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<link rel="stylesheet" type="text/css" href="./lib/animate.css">\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("定义 transition 及属性：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<transition\n\tenter-active-class="fadeInRight"\n    leave-active-class="fadeOutRight"\n    :duration="{ enter: 500, leave: 800 }">\n  \t<div class="animated" v-show="isshow">动画哦</div>\n</transition>\n')])])]),a("h3",{attrs:{id:"使用动画钩子函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用动画钩子函数"}},[t._v("#")]),t._v(" 使用动画钩子函数")]),t._v(" "),a("ol",[a("li",[t._v("定义 transition 组件以及三个钩子函数：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('<div id="app">\n    <input type="button" value="切换动画" @click="isshow = !isshow">\n    <transition\n    @before-enter="beforeEnter"\n    @enter="enter"\n    @after-enter="afterEnter">\n      <div v-if="isshow" class="show">OK</div>\n    </transition>\n  </div>\n')])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("定义三个 methods 钩子方法：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("methods: {\n        beforeEnter(el) { // 动画进入之前的回调\n          el.style.transform = 'translateX(500px)';\n        },\n        enter(el, done) { // 动画进入完成时候的回调\n          el.offsetWidth;\n          el.style.transform = 'translateX(0px)';\n          done();\n        },\n        afterEnter(el) { // 动画进入完成之后的回调\n          this.isshow = !this.isshow;\n        }\n      }\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("定义动画过渡时长和样式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".show{\n      transition: all 0.4s ease;\n    }\n")])])]),a("h3",{attrs:{id:"v-for-的列表过渡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for-的列表过渡"}},[t._v("#")]),t._v(" "),a("a",{attrs:{href:"https://cn.vuejs.org/v2/guide/transitions.html#%E5%88%97%E8%A1%A8%E7%9A%84%E8%BF%9B%E5%85%A5%E5%92%8C%E7%A6%BB%E5%BC%80%E8%BF%87%E6%B8%A1",target:"_blank",rel:"noopener noreferrer"}},[t._v("v-for 的列表过渡"),a("OutboundLink")],1)]),t._v(" "),a("ol",[a("li",[t._v("定义过渡样式：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<style>\n    .list-enter,\n    .list-leave-to {\n      opacity: 0;\n      transform: translateY(10px);\n    }\n\n    .list-enter-active,\n    .list-leave-active {\n      transition: all 0.3s ease;\n    }\n</style>\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("定义DOM结构，其中，需要使用 transition-group 组件把v-for循环的列表包裹起来：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  <div id="app">\n    <input type="text" v-model="txt" @keyup.enter="add">\n\n    <transition-group tag="ul" name="list">\n      <li v-for="(item, i) in list" :key="i">{{item}}</li>\n    </transition-group>\n  </div>\n')])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("定义 VM中的结构：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    // 创建 Vue 实例，得到 ViewModel\n    var vm = new Vue({\n      el: '#app',\n      data: {\n        txt: '',\n        list: [1, 2, 3, 4]\n      },\n      methods: {\n        add() {\n          this.list.push(this.txt);\n          this.txt = '';\n        }\n      }\n    });\n")])])]),a("h3",{attrs:{id:"列表的排序过渡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#列表的排序过渡"}},[t._v("#")]),t._v(" 列表的排序过渡")]),t._v(" "),a("p",[a("code",[t._v("<transition-group>")]),t._v(" 组件还有一个特殊之处。不仅可以进入和离开动画，"),a("strong",[t._v("还可以改变定位")]),t._v("。要使用这个新功能只需了解新增的 "),a("code",[t._v("v-move")]),t._v(" 特性，"),a("strong",[t._v("它会在元素的改变定位的过程中应用")]),t._v("。")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("v-move")]),t._v(" 和 "),a("code",[t._v("v-leave-active")]),t._v(" 结合使用，能够让列表的过渡更加平缓柔和：")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(".v-move{\n  transition: all 0.8s ease;\n}\n.v-leave-active{\n  position: absolute;\n}\n")])])]),a("h2",{attrs:{id:"相关文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[t._v("#")]),t._v(" 相关文章")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://v1-cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue.js 1.x 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue.js 2.x 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.css88.com/archives/7715",target:"_blank",rel:"noopener noreferrer"}},[t._v("String.prototype.padStart(maxLength, fillString)"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://www.cnblogs.com/wuhua1/p/6686237.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("js 里面的键盘事件对应的键码"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/pagekit/vue-resource",target:"_blank",rel:"noopener noreferrer"}},[t._v("pagekit/vue-resource"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jingyan.baidu.com/article/a65957f4976aad24e67f9b9b.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("navicat如何导入sql文件和导出sql文件"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://cubic-bezier.com/#.4,-0.3,1,.33",target:"_blank",rel:"noopener noreferrer"}},[t._v("贝塞尔在线生成器"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);