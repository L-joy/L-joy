(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{229:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"第三章-基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第三章-基本概念"}},[t._v("#")]),t._v(" 第三章 基本概念")]),t._v(" "),s("p",[t._v("本章内容")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("语法")])]),t._v(" "),s("li",[s("p",[t._v("数据类型")])]),t._v(" "),s("li",[s("p",[t._v("流控制语句")])]),t._v(" "),s("li",[s("p",[t._v("函数")])])]),t._v(" "),s("h3",{attrs:{id:"_3-1-语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-语法"}},[t._v("#")]),t._v(" 3.1 语法")]),t._v(" "),s("h4",{attrs:{id:"_3-1-1-区分大小写"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-区分大小写"}},[t._v("#")]),t._v(" 3.1.1 区分大小写")]),t._v(" "),s("p",[t._v("ECMAScript 中的一切（变量、函数名和操作符）都区分大小写")]),t._v(" "),s("h4",{attrs:{id:"_3-1-2-标识符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-标识符"}},[t._v("#")]),t._v(" 3.1.2 标识符")]),t._v(" "),s("p",[t._v("所谓标识符，就是指变量、函数、属性的名字，或者函数的参数。标识符可以是按照下列格式规则\n组合起来的一或多个字符：")]),t._v(" "),s("ul",[s("li",[t._v("第一个字符必须是一个字母、下划线（ _）或一个美元符号（ $）；")]),t._v(" "),s("li",[t._v("其他字符可以是字母、下划线、美元符号或数字。")])]),t._v(" "),s("p",[t._v("ECMAScript 标识符采用驼峰大小写格式 ，例如：firstSecond ；")]),t._v(" "),s("p",[t._v("不能把关键字、保留字、 true、 false 和 null 用作标识符。")]),t._v(" "),s("h4",{attrs:{id:"_3-1-3-严格模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-3-严格模式"}},[t._v("#")]),t._v(" 3.1.3 严格模式")]),t._v(" "),s("p",[t._v("ECMAScript 5 引入了严格模式（ strict mode）的概念。 要在整个脚本中启用严格模式，可以在顶部添加如下代码：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("其实它是一个编译指示（ pragma）")]),t._v(" "),s("p",[t._v("在函数内部的上方包含这条编译指示，也可以指定函数在严格模式下执行：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数体")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-2-关键字和保留字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-关键字和保留字"}},[t._v("#")]),t._v(" 3.2 关键字和保留字")]),t._v(" "),s("p",[t._v("以下就是 ECMAScript的全部关键字（带*号上标的是第 5 版新增的关键字）：")]),t._v(" "),s("p",[s("code",[t._v("break")]),t._v(" "),s("code",[t._v("do")]),t._v(" "),s("code",[t._v("instanceof")]),t._v(" "),s("code",[t._v("typeof")]),t._v(" "),s("code",[t._v("case")]),t._v(" "),s("code",[t._v("else")]),t._v(" "),s("code",[t._v("new")]),t._v(" "),s("code",[t._v("var")]),t._v(" "),s("code",[t._v("catch")]),t._v(" "),s("code",[t._v("finally")]),t._v(" "),s("code",[t._v("return")]),t._v(" "),s("code",[t._v("void")]),t._v(" "),s("code",[t._v("continue")]),t._v(" "),s("code",[t._v("for")]),t._v(" "),s("code",[t._v("switch")]),t._v(" "),s("code",[t._v("while")]),t._v(" "),s("code",[t._v("debugger*")]),t._v(" "),s("code",[t._v("function")]),t._v(" "),s("code",[t._v("this")]),t._v(" "),s("code",[t._v("with")]),t._v(" "),s("code",[t._v("default")]),t._v(" "),s("code",[t._v("if")]),t._v(" "),s("code",[t._v("throw")]),t._v(" "),s("code",[t._v("delete")]),t._v(" "),s("code",[t._v("in")]),t._v(" "),s("code",[t._v("try")])]),t._v(" "),s("p",[t._v("以下是 ECMA-262 第 3 版定义的全部保留字：\n"),s("code",[t._v("abstract")]),t._v(" "),s("code",[t._v("enum")]),t._v(" "),s("code",[t._v("int")]),t._v(" "),s("code",[t._v("short")]),t._v(" "),s("code",[t._v("boolean")]),t._v(" "),s("code",[t._v("export")]),t._v(" "),s("code",[t._v("interface")]),t._v(" "),s("code",[t._v("static")]),t._v(" "),s("code",[t._v("byte")]),t._v(" "),s("code",[t._v("extends")]),t._v(" "),s("code",[t._v("long")]),t._v(" "),s("code",[t._v("super")]),t._v(" "),s("code",[t._v("char")]),t._v(" "),s("code",[t._v("final")]),t._v(" "),s("code",[t._v("native")]),t._v(" "),s("code",[t._v("synchronized")]),t._v(" "),s("code",[t._v("class")]),t._v(" "),s("code",[t._v("float")]),t._v(" "),s("code",[t._v("package")]),t._v(" "),s("code",[t._v("throws")]),t._v(" "),s("code",[t._v("const")]),t._v(" "),s("code",[t._v("goto")]),t._v(" "),s("code",[t._v("private")]),t._v(" "),s("code",[t._v("transient")]),t._v(" "),s("code",[t._v("debugger")]),t._v(" "),s("code",[t._v("implements")]),t._v(" "),s("code",[t._v("protected")]),t._v(" "),s("code",[t._v("volatile")]),t._v(" "),s("code",[t._v("double")]),t._v(" "),s("code",[t._v("import")]),t._v(" "),s("code",[t._v("public")])]),t._v(" "),s("h3",{attrs:{id:"_3-3-数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数据类型"}},[t._v("#")]),t._v(" 3.3 数据类型")]),t._v(" "),s("h4",{attrs:{id:"_3-3-1-typeof操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-1-typeof操作符"}},[t._v("#")]),t._v(" 3.3.1  "),s("code",[t._v("typeof")]),t._v("操作符")]),t._v(" "),s("p",[t._v("检测给定变量的数据类型—— "),s("code",[t._v("typeof")]),t._v(" ，对一个值使用"),s("code",[t._v("typeof")]),t._v(" 操作符可能返回下列某个字符串：")]),t._v(" "),s("ul",[s("li",[t._v('"'),s("code",[t._v("undefined")]),t._v('"——如果这个值未定义；')]),t._v(" "),s("li",[t._v('"'),s("code",[t._v("boolean")]),t._v('"——如果这个值是布尔值；')]),t._v(" "),s("li",[t._v('"'),s("code",[t._v("string")]),t._v('"——如果这个值是字符串；')]),t._v(" "),s("li",[t._v('"'),s("code",[t._v("number")]),t._v('"——如果这个值是数值；')]),t._v(" "),s("li",[t._v('"'),s("code",[t._v("object")]),t._v('"——如果这个值是对象或 null；')]),t._v(" "),s("li",[t._v('"'),s("code",[t._v("function")]),t._v('"——如果这个值是函数。')])]),t._v(" "),s("h4",{attrs:{id:"_3-3-2-undefined类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-2-undefined类型"}},[t._v("#")]),t._v(" 3.3.2  "),s("code",[t._v("Undefined")]),t._v("类型")]),t._v(" "),s("p",[t._v("Undefined 类型只有一个值，即特殊的 undefined。在使用 "),s("code",[t._v("var")]),t._v(" 声明变量但未对其加以初始化时，这个变量的值就是 undefined ；")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-3-3-null类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-3-null类型"}},[t._v("#")]),t._v(" 3.3.3 "),s("code",[t._v("Null")]),t._v("类型")]),t._v(" "),s("p",[t._v("Null 类型是第二个只有一个值的数据类型，这个特殊的值是 null。 null 值表示一个"),s("strong",[t._v("空对象指针")]),t._v("，而这也正是使用"),s("code",[t._v("typeof")]),t._v(' 操作符检测 null 值时会返回"object"的原因，如下面的例子所示：')]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" car "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" car"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "object"')]),t._v("\n")])])]),s("p",[t._v("实际上， undefined 值是派生自 null 值的，因此 ECMA-262 规定对它们的相等性测试要返回 true：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-3-4-boolean类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-4-boolean类型"}},[t._v("#")]),t._v(" 3.3.4  "),s("code",[t._v("Boolean")]),t._v("类型")]),t._v(" "),s("p",[t._v("该类型只有两个字面值： true 和 false。 true 不一定等于 1，而 false 也不一定等于 0。")]),t._v(" "),s("p",[t._v("可以对任何数据类型的值调用 Boolean()函数，而且总会返回一个 Boolean 值。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" messageAsBoolean "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("在这个例子中，字符串 message 被转换成了一个 "),s("code",[t._v("Boolean")]),t._v("值， 该值被保存在 "),s("code",[t._v("messageAsBoolean")]),t._v("\n变量中。")]),t._v(" "),s("p",[t._v("下表给出了各种数据类型及其对应的转换规则。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("数据类型")]),t._v(" "),s("th",[t._v("转换为true值")]),t._v(" "),s("th",[t._v("转换为false值")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Boolean")]),t._v(" "),s("td",[t._v("true")]),t._v(" "),s("td",[t._v("false")])]),t._v(" "),s("tr",[s("td",[t._v("String")]),t._v(" "),s("td",[t._v("任何非空字符串")]),t._v(" "),s("td",[t._v('""(空字符串)')])]),t._v(" "),s("tr",[s("td",[t._v("Number")]),t._v(" "),s("td",[t._v("任何非0数字")]),t._v(" "),s("td",[t._v("0和"),s("code",[t._v("NaN")])])]),t._v(" "),s("tr",[s("td",[t._v("Object")]),t._v(" "),s("td",[t._v("任何对象")]),t._v(" "),s("td",[t._v("null")])]),t._v(" "),s("tr",[s("td",[t._v("Undefined")]),t._v(" "),s("td"),t._v(" "),s("td",[t._v("undefined")])])])]),t._v(" "),s("h4",{attrs:{id:"_3-3-5-number类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-5-number类型"}},[t._v("#")]),t._v(" 3.3.5 "),s("code",[t._v("Number")]),t._v("类型")]),t._v(" "),s("p",[t._v("最基本的数值字面量格式是十进制整数 ，除了以十进制表示外，整数还可以通过八进制（以 8 为基数）或十六进制（以 16 为基数）的字面值来表示。")]),t._v(" "),s("p",[t._v("八进制字面值的第一位必须是零（ 0），然后是八进制数字序列(0-7)。如果字面值中的数值超出了范围，那么前导零将被忽略，后面的数值将被当作十进制数值解析。 八进制字面量在严格模式下是无效的 ;")]),t._v(" "),s("p",[t._v("十六进制字面值的前两位必须是 0x，后跟任何十六进制数字（ 0-9 及 A-F）。其中，字母 A-F可以大写，也可以小写。")]),t._v(" "),s("h5",{attrs:{id:"浮点数值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浮点数值"}},[t._v("#")]),t._v(" 浮点数值")]),t._v(" "),s("p",[t._v("对于那些极大或极小的数值，可以用 e 表示法（即科学计数法）表示的浮点数值表示。 用 e 表示法表示的数值等于 e 前面的数值乘以 10 的指数次幂。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" floatNum "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.125e7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于 31250000")]),t._v("\n")])])]),s("h5",{attrs:{id:"数值范围"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值范围"}},[t._v("#")]),t._v(" 数值范围")]),t._v(" "),s("p",[t._v("ECMAScript 中")]),t._v(" "),s("p",[t._v("能够表示的最小数值保存在 "),s("code",[t._v("Number.MIN_VALUE")]),t._v(" 中——在大多数浏览器中，这个值是 5e-324；")]),t._v(" "),s("p",[t._v("能够表示的最大数值保存在"),s("code",[t._v("Number.MAX_VALUE")]),t._v(" 中——在大多数浏览器中，这个1.7976931348623157e+308。")]),t._v(" "),s("p",[t._v("如果某次计算的结果得到了一个超出 JavaScript 数值范围的值， 如果这个数值是负数，则会被转换成-Infinity（负无穷），如果这个数值是正数，则会被转换成 Infinity（正无穷）。")]),t._v(" "),s("p",[t._v("要想确定一个数值是不是有穷的可以使用"),s("code",[t._v("isFinite()")]),t._v("函数 ；")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" Number"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MAX_VALUE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFinite")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false")]),t._v("\n")])])]),s("h5",{attrs:{id:"nan"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nan"}},[t._v("#")]),t._v(" "),s("code",[t._v("NaN")])]),t._v(" "),s("p",[s("code",[t._v("NaN")]),t._v("，即非数值（ Not a Number）是一个特殊的数值 ，这个数值用于表示一个本来要返回数值的操作数未返回数值的情况（这样就不会抛出错误了）。")]),t._v(" "),s("p",[t._v("例如，在其他编程语言中，任何数值除以 0 都会导致错误，从而停止代码执行。但在 ECMAScript 中，任何数值除以 0 会返回 "),s("code",[t._v("NaN")]),t._v("，因此不会影响其他代码的执行。")]),t._v(" "),s("p",[s("code",[t._v("NaN")]),t._v(" 本身有两个非同寻常的特点：")]),t._v(" "),s("p",[t._v("首先，任何涉及 "),s("code",[t._v("NaN")]),t._v(" 的操作（例如 "),s("code",[t._v("NaN")]),t._v("/10）都会返回 "),s("code",[t._v("NaN")]),t._v("，这个特点在多步计算中有可能导致问题。")]),t._v(" "),s("p",[t._v("其次， "),s("code",[t._v("NaN")]),t._v(" 与任何值都不相等，包括"),s("code",[t._v("NaN")]),t._v(" 本身。")]),t._v(" "),s("p",[t._v("ECMAScript 定义了 "),s("code",[t._v("isNaN()")]),t._v("函数 ，这个函数接受一个参数，该参数可以是任何类型，而函数会帮我们确定这个参数是否“不是数值” ；"),s("code",[t._v("isNaN()")]),t._v('在接收到一个值之后，会尝试将这个值转换为数值。某些不是数值的值会直接转换为数值，例如字符串"10"或 Boolean 值。而任何不能被转换为数值的值都会导致这个函数返回 true。')]),t._v(" "),s("p",[t._v("请看下面的例子：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false（ 10 是一个数值）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"10"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false（可以被转换成数值 10）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true（不能转换成数值）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isNaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//false（可以被转换成数值 1）")]),t._v("\n")])])]),s("h5",{attrs:{id:"数值转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值转换"}},[t._v("#")]),t._v(" 数值转换")]),t._v(" "),s("p",[t._v("有 3 个函数可以把非数值转换为数值："),s("code",[t._v("Number()")]),t._v("、 "),s("code",[t._v("parseInt()")]),t._v("和 "),s("code",[t._v("parseFloat()")])]),t._v(" "),s("p",[t._v("转型函数 Number()可以用于任何数据类型 ；另两个函数则专门用于把字符串转换成数值")]),t._v(" "),s("p",[t._v("Number()函数的转换规则如下 ：")]),t._v(" "),s("ul",[s("li",[t._v("如果是 Boolean 值， true 和 false 将分别被转换为 1 和 0")]),t._v(" "),s("li",[t._v("如果是数字值，只是简单的传入和返回")]),t._v(" "),s("li",[t._v("如果是 null 值，返回 0")]),t._v(" "),s("li",[t._v("如果是 undefined，返回 "),s("code",[t._v("NaN")])]),t._v(" "),s("li",[t._v("如果是字符串，遵循下列规则：\n"),s("ul",[s("li",[t._v('如果字符串中只包含数字（包括前面带正号或负号的情况），则将其转换为十进制数值，即"1"会变成 1， "123"会变成 123，而"011"会变成 11（注意：前导的零被忽略了）；')]),t._v(" "),s("li",[t._v('如果字符串中包含有效的浮点格式，如"1.1"，则将其转换为对应的浮点数值（同样，也会忽略前导零）；')]),t._v(" "),s("li",[t._v('如果字符串中包含有效的十六进制格式，例如"0xf"，则将其转换为相同大小的十进制整数值；')]),t._v(" "),s("li",[t._v("如果字符串是空的（不包含任何字符），则将其转换为 0；")]),t._v(" "),s("li",[t._v("如果字符串中包含除上述格式之外的字符，则将其转换为 "),s("code",[t._v("NaN")]),t._v("。")])])]),t._v(" "),s("li",[t._v("如果是对象，则调用对象的 "),s("code",[t._v("valueOf()")]),t._v("方法，然后依照前面的规则转换返回的值。如果转换的结果是 "),s("code",[t._v("NaN")]),t._v("，则调用对象的 "),s("code",[t._v("toString()")]),t._v("方法，然后再次依照前面的规则转换返回的字符串值。")])]),t._v(" "),s("p",[s("code",[t._v("parseInt()")]),t._v("函数在转换字符串时，更多的是看其是否符合数值模式。它会忽略字符串前面的空格，直至找到第一个非空格字符。如果第一个字符不是数字字符或者负号，"),s("code",[t._v("parseInt()")]),t._v("就会返回 "),s("code",[t._v("NaN")]),t._v("；也就是说，用 "),s("code",[t._v("parseInt()")]),t._v("转换空字符串会返回"),s("code",[t._v("NaN（")]),t._v("Number()"),s("code",[t._v("对空字符返回 0）。如果第一个字符是数字字符，")]),t._v(" "),s("code",[t._v("parseInt()")]),t._v("会继续解析第二个字符，直到解析完所有后续字符或者遇到了一个非数字字符。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234blue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1234")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xA"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10（十六进制数）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("22.5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 22")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"070"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 56（八进制数）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"70"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 70（十进制数）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num7 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0xf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 15（十六进制数）")]),t._v("\n")])])]),s("p",[s("code",[t._v("parseFloat()")]),t._v('也是从第一个字符（位置 0）开始解析每个字符。而且也是一直解析到字符串末尾，或者解析到遇见一个无效的浮点数字字符为止。也就是说，字符串中的第一个小数点是有效的，而第二个小数点就是无效的了，因此它后面的字符串将被忽略。举例来说，"22.34.5"将会被转换为 22.34。')]),t._v(" "),s("p",[s("code",[t._v("parseFloat()")]),t._v("将 十六进制格式的字符串转换成 0 ；")]),t._v(" "),s("p",[t._v("最后还要注意一点：如果字符串包含的是一个可解析为整数的数(没有小数点，或者小数点后都是零)"),s("code",[t._v("parseFloat()")]),t._v("会返回整数。")]),t._v(" "),s("h4",{attrs:{id:"_3-3-6-string类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-6-string类型"}},[t._v("#")]),t._v(" 3.3.6 "),s("code",[t._v("String")]),t._v("类型")]),t._v(" "),s("p",[t._v("String 类型用于表示由零或多个 16 位 Unicode 字符组成的字符序列，即字符串。")]),t._v(" "),s("h5",{attrs:{id:"字符字面量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符字面量"}},[t._v("#")]),t._v(" 字符字面量")]),t._v(" "),s("p",[t._v("String 数据类型包含一些特殊的字符字面量，也叫"),s("strong",[t._v("转义序列")]),t._v("，用于表示非打印字符，或者具有其他用途的字符。这些字符字面量如下表所示：")]),t._v(" "),s("p",[s("img",{attrs:{src:"JavaScript%E9%AB%98%E7%BA%A7%E6%95%99%E7%A8%8B3/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png",alt:"转义字符"}})]),t._v(" "),s("h5",{attrs:{id:"字符串的特点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串的特点"}},[t._v("#")]),t._v(" 字符串的特点")]),t._v(" "),s("p",[t._v("ECMAScript 中的字符串是不可变的")]),t._v(" "),s("h5",{attrs:{id:"转换为字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#转换为字符串"}},[t._v("#")]),t._v(" 转换为字符串")]),t._v(" "),s("p",[t._v("要把一个值转换为一个字符串有两种方式。第一种是使用几乎每个值都有的 "),s("code",[t._v("toString()")]),t._v("方法 ，这个方法唯一要做的就是返回相应值的字符串表现。 null 和 undefined 值没有这个方法 。")]),t._v(" "),s("p",[t._v("调用"),s("code",[t._v("toString()")]),t._v("方法不必传递参数。")]),t._v(" "),s("p",[t._v("但是，在调用数值的"),s("code",[t._v("toString()")]),t._v("方法时，可以传递一个参数：输出数值的基数(进制数)。")]),t._v(" "),s("p",[t._v("在不知道要转换的值是不是 null 或 undefined 的情况下，还可以使用转型函数 "),s("code",[t._v("String()")]),t._v("，这个函数能够将任何类型的值转换为字符串。"),s("code",[t._v("String()")]),t._v("函数遵循下列转换规则：")]),t._v(" "),s("ul",[s("li",[t._v("如果值有"),s("code",[t._v("toString()")]),t._v("方法，则调用该方法（没有参数）并返回相应的结果；")]),t._v(" "),s("li",[t._v('如果值是 null，则返回"null"；')]),t._v(" "),s("li",[t._v('如果值是 undefined，则返回"undefined"。')])]),t._v(" "),s("h4",{attrs:{id:"_3-3-7-object类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-7-object类型"}},[t._v("#")]),t._v(" 3.3.7 "),s("code",[t._v("Object")]),t._v("类型")]),t._v(" "),s("p",[t._v("ECMAScript 中的对象其实就是一组数据和功能的集合。 对象可以通过执行 new 操作符后跟要创建的对象类型的名称来创建。 而创建 Object 类型的实例并为其添加属性和（或）方法，就可以创建自定义对象：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Object 的每个实例都具有下列属性和方法:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("constructor")]),t._v("：保存着用于创建当前对象的函数。对于前面的例子而言，构造函数（ constructor）就是 Object()")]),t._v(" "),s("li",[s("code",[t._v("hasOwnProperty(propertyName)")]),t._v("：用于检查给定的属性在当前对象实例中（而不是在实例的原型中）是否存在。其中，作为参数的属性名必须以字符串形式指定（例如： "),s("code",[t._v('o.hasOwnProperty("name")')]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("isPrototypeOf(object)")]),t._v("：用于检查传入的对象是否是传入对象的原型")]),t._v(" "),s("li",[s("code",[t._v("propertyIsEnumerable(propertyName)")]),t._v("：用于检查给定的属性是否能够使用 for-in 语句来枚举。与"),s("code",[t._v("hasOwnProperty()")]),t._v("方法一样，作为参数的属性名必须以字符串形式指定。")]),t._v(" "),s("li",[s("code",[t._v("toLocaleString()")]),t._v("：返回对象的字符串表示，该字符串与执行环境的地区对应。")]),t._v(" "),s("li",[s("code",[t._v("toString()")]),t._v("：返回对象的字符串表示。")]),t._v(" "),s("li",[s("code",[t._v("valueOf()")]),t._v("：返回对象的字符串、数值或布尔值表示。通常与 "),s("code",[t._v("toString()")]),t._v("方法的返回值相同。")])]),t._v(" "),s("p",[t._v("由于在 ECMAScript 中 "),s("code",[t._v("Object")]),t._v(" 是所有对象的基础，因此所有对象都具有这些基本的属性和方法。")]),t._v(" "),s("h3",{attrs:{id:"_3-4-操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-操作符"}},[t._v("#")]),t._v(" 3.4 操作符")]),t._v(" "),s("h4",{attrs:{id:"_3-4-1-一元操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-一元操作符"}},[t._v("#")]),t._v(" 3.4.1 一元操作符")]),t._v(" "),s("p",[t._v("前置递增/减操作符（++a/--a）")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("相当于")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("后置递增/减操作符（a++/a--）")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" age "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("29")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nage"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("把递增操作符放在变量后面并不会改变语句的结果")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于 22")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于 21")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-4-2-位操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-2-位操作符"}},[t._v("#")]),t._v(" 3.4.2 位操作符")]),t._v(" "),s("p",[s("strong",[t._v("按位非（ NOT）")])]),t._v(" "),s("p",[t._v("按位非操作符由一个波浪线（ ~）表示，执行按位非的结果就是返回数值的反码。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制 00000000000000000000000000011001")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二进制 11111111111111111111111111100110")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -26")]),t._v("\n")])])]),s("p",[s("strong",[t._v("按位与（ AND）")])]),t._v(" "),s("p",[t._v("按位与操作符由一个和号字符（ &）表示，它有两个操作符数.")]),t._v(" "),s("p",[s("strong",[t._v("按位或（ OR）")])]),t._v(" "),s("p",[t._v("按位或操作符由一个竖线符号（ |）表示，同样也有两个操作数 .")]),t._v(" "),s("p",[s("strong",[t._v("按位异或（ XOR）")])]),t._v(" "),s("p",[t._v("按位异或操作符由一个插入符号（ ^）表示，也有两个操作数。")]),t._v(" "),s("p",[t._v("这个操作在两个数值对应位上只有一个 1 时才返回 1，如果对应的两位都是 1 或都是 0，则返回 0。")]),t._v(" "),s("p",[s("strong",[t._v("左移")])]),t._v(" "),s("p",[t._v("左移操作符由两个小于号（ <<）表示，这个操作符会将数值的所有位向左移动指定的位数。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的 1000000，十进制的 64")]),t._v("\n")])])]),s("p",[s("strong",[t._v("有符号的右移")])]),t._v(" "),s("p",[t._v("有符号的右移操作符由两个大于号（ >>）表示，这个操作符会将数值向右移动，但保留符号位（即正负号标记）。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的 1000000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的 10 ，即十进制的 2")]),t._v("\n")])])]),s("p",[s("strong",[t._v("无符号右移")])]),t._v(" "),s("p",[t._v("无符号右移操作符由 3 个大于号（ >>>）表示，这个操作符会将数值的所有 32 位都向右移动。 对正数来说，无符号右移的结果与有符号右移相同。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("64")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于二进制的 11111111111111111111111111000000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" newValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldValue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等于十进制的 134217726")]),t._v("\n")])])]),s("h4",{attrs:{id:"_3-4-3-布尔操作符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-3-布尔操作符"}},[t._v("#")]),t._v(" 3.4.3 布尔操作符")]),t._v(" "),s("p",[t._v("布尔操作符一共有 3 个：非（ NOT）、与（ AND）和或（ OR） ；")]),t._v(" "),s("p",[s("strong",[t._v("逻辑非")])]),t._v(" "),s("p",[t._v("逻辑非操作符由一个叹号(!)表示 ,逻辑非操作符遵循下列规则：")]),t._v(" "),s("ul",[s("li",[t._v("如果操作数是一个对象，返回 false；")]),t._v(" "),s("li",[t._v("如果操作数是一个空字符串，返回 true；")]),t._v(" "),s("li",[t._v("如果操作数是一个非空字符串，返回 false；")]),t._v(" "),s("li",[t._v("如果操作数是数值 0，返回 true；")]),t._v(" "),s("li",[t._v("如果操作数是任意非 0 数值（包括 Infinity），返回 false；")]),t._v(" "),s("li",[t._v("如果操作数是 null，返回 true；")]),t._v(" "),s("li",[t._v("如果操作数是 "),s("code",[t._v("NaN")]),t._v("，返回 true；")]),t._v(" "),s("li",[t._v("如果操作数是 undefined，返回 true。")])]),t._v(" "),s("p",[s("strong",[t._v("逻辑与")])]),t._v(" "),s("p",[t._v("逻辑与操作符由两个和号（ &&）表示，有两个操作数 ,它遵循下列规则：")]),t._v(" "),s("ul",[s("li",[t._v("如果第一个操作数是对象，则返回第二个操作数；")]),t._v(" "),s("li",[t._v("如果第二个操作数是对象，则只有在第一个操作数的求值结果为 true 的情况下才会返回该\n对象；")]),t._v(" "),s("li",[t._v("如果两个操作数都是对象，则返回第二个操作数；")]),t._v(" "),s("li",[t._v("如果有一个操作数是 null，则返回 null；")]),t._v(" "),s("li",[t._v("如果有一个操作数是"),s("code",[t._v("NaN")]),t._v("，则返回 "),s("code",[t._v("NaN")]),t._v("；")]),t._v(" "),s("li",[t._v("如果有一个操作数是 undefined，则返回 undefined。")])]),t._v(" "),s("p",[t._v("逻辑或")]),t._v(" "),s("p",[t._v("逻辑或操作符由两个竖线符号（ ||）表示，有两个操作数 ,它遵循下列规则：")]),t._v(" "),s("ul",[s("li",[t._v("如果第一个操作数是对象，则返回第一个操作数；")]),t._v(" "),s("li",[t._v("如果第一个操作数的求值结果为 false，则返回第二个操作数；")]),t._v(" "),s("li",[t._v("如果两个操作数都是对象，则返回第一个操作数；")]),t._v(" "),s("li",[t._v("如果两个操作数都是 null，则返回 null；")]),t._v(" "),s("li",[t._v("如果两个操作数都是 "),s("code",[t._v("NaN")]),t._v("，则返回 "),s("code",[t._v("NaN")]),t._v("；")]),t._v(" "),s("li",[t._v("如果两个操作数都是 undefined，则返回 undefined。")])]),t._v(" "),s("h3",{attrs:{id:"_3-5-语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-语句"}},[t._v("#")]),t._v(" 3.5 语句")]),t._v(" "),s("h4",{attrs:{id:"if语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#if语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("if")]),t._v("语句")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Greater than 25."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Less than 0."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Between 0 and 25, inclusive."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"do-while语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#do-while语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("do-while")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("do-while")]),t._v(" 语句是一种后测试循环语句，即只有在循环体中的代码执行之后，才会测试出口条件。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"while语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#while语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("while")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("while")]),t._v(" 语句属于前测试循环语句， 也就是说， 在循环体内的代码被执行之前，就会对出口条件求值。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"for语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("for")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("for")]),t._v(" 语句也是一种前测试循环语句，但它具有在执行循环之前初始化变量和定义循环后要执行的代码的能力。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initialization"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" post"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("loop"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"for-in语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#for-in语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("for-in")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("for-in")]),t._v("语句是一种精准的迭代语句，可以用来枚举对象的属性。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("property "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" propName "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\ndocument"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("propName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("在这个例子中，我们使用"),s("code",[t._v("for-in")]),t._v(" 循环来显示了 BOM 中 "),s("code",[t._v("window")]),t._v(" 对象的所有属性。")]),t._v(" "),s("h4",{attrs:{id:"label语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#label语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("label")]),t._v("语句")]),t._v(" "),s("p",[t._v("使用 label 语句可以在代码中添加标签，以便将来使用。")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n\nstart"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"break和continue语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#break和continue语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("break")]),t._v("和"),s("code",[t._v("continue")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("break")]),t._v(" 语句会立即退出循环，强制继续执行循环后面的语句。而 "),s("code",[t._v("continue")]),t._v(" 语句虽然也是立即退出循环，但退出循环后会从循环的顶部继续执行。")]),t._v(" "),s("p",[s("code",[t._v("break")]),t._v("和 "),s("code",[t._v("continue")]),t._v(" 语句都可以与 label 语句联合使用，从而返回代码中特定的位置。这种联合使用的情况多发生在循环嵌套的情况下，如下面的例子所示：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\noutermost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" j "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" outermost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    num"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//55")]),t._v("\n")])])]),s("p",[t._v("在这个例子中， outermost 标签表示外部的 for 语句。如果每个循环正常执行 10 次，则 "),s("code",[t._v("num++")]),t._v("语句就会正常执行 100 次。换句话说，如果两个循环都自然结束， "),s("code",[t._v("num")]),t._v(" 的值应该是 100。但内部循环中的 break 语句带了一个参数：要返回到的标签。添加这个标签的结果将导致 break 语句不仅会退出内部的 for 语句（即使用变量 j 的循环），而且也会退出外部的 for 语句（即使用变量 i 的循环）。")]),t._v(" "),s("h4",{attrs:{id:"with语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#with语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("with")]),t._v("语句")]),t._v(" "),s("p",[s("code",[t._v("with")]),t._v(" 语句的作用是将代码的作用域设置到一个特定的对象中。 with 语句的语法如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" statement"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("定义 "),s("code",[t._v("with")]),t._v(" 语句的目的主要是为了简化多次编写同一个对象的工作，如下面的例子所示：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("href"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("上面几行代码都包含 "),s("code",[t._v("location")]),t._v(" 对象。如果使用 "),s("code",[t._v("with")]),t._v(" 语句，可以把上面的代码改写成如下所示：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("location"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" qs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" search"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" hostName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" url "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" href"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"switch语句"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#switch语句"}},[t._v("#")]),t._v(" "),s("code",[t._v("switch")]),t._v("语句")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expression"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" statement\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("ECMAScript 函数不能重载。 如果在 ECMAScript 中定义了两个名字相同的函数，则该名字只属于后定义的函数。 前者会被覆盖。")])])}),[],!1,null,null,null);a.default=e.exports}}]);